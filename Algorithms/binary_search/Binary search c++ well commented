#include <bits/stdc++.h>
using namespace std;

// binary-search implementation in  c++
int binarySearch(int *a,int n,int val)
{
    int mid,start,last; // declaring variables
    start = 0; // initializing
    last = n;
    // condition for the end of loop
    while(start <= last)
    {
        mid = start + (last-start)/2; // initializing mid to the middle of the array

        if(a[mid] == val) // if mid of the array is equal to the value
            return mid;
        else
            if(a[mid] < val) // if mid of the array is less than the value.. we look on the right part of the array
            start = mid + 1;
        else                 // if mid of the array is more than the value.. we look on the left part of the array
            last = mid - 1;
    }

    // if we dont find the element
    return -1;

}
int main() {

    int numOfElements; // number of elements in the array
    cout<<"Enter the number of elements in the array : ";
    cin>>numOfElements;

    int arr[numOfElements]; // declaring an array of above size;
    int i; // counter variable to iterate the array
    cout<<"Enter the elements of the array : ";
    for(i = 0; i < numOfElements; i++)
        cin>>arr[i];

    int value; // declaring the value to be searched in the array;
    cout<<"Enter the value you want to search in the array : ";
    cin>>value;

    // call to function binarySearch
    if(binarySearch(arr,numOfElements,value) == -1) // if the value is not found
        cout<<"The value does not exist in the array :";
    else
        cout<<"The value "<<value<<" is found at position "<<binarySearch(arr,numOfElements,value);


}
